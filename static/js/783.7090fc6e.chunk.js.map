{"version":3,"file":"static/js/783.7090fc6e.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/Pages/ProfilePage/Profile.module.css?2527","webpack://samurai-way/./src/Pages/ProfilePage/MyPosts/MyPosts.module.css?b11d","webpack://samurai-way/./src/Pages/ProfilePage/MyPosts/Post/Post.module.css?9455","Pages/ProfilePage/MyPosts/Post/Post.tsx","Pages/ProfilePage/MyPosts/MyPosts.tsx","webpack://samurai-way/./src/Pages/ProfilePage/ProfileInfo/ProfileInfo.module.css?9f8d","webpack://samurai-way/./src/Components/EditableStatus/EditableStatus.module.css?858a","Components/EditableStatus/EditableStatus.tsx","Pages/ProfilePage/ProfileInfo/ProfileStatus.tsx","webpack://samurai-way/./src/Pages/ProfilePage/ProfileInfo/Avatar/Avatar.module.css?800e","Components/UploadFileWrapper/UploadFileWrapper.tsx","Pages/ProfilePage/ProfileInfo/Avatar/Avatar.tsx","webpack://samurai-way/./src/Pages/ProfilePage/ProfileInfo/ProfileEdit/ProfileEditBlock.module.css?c3af","Pages/ProfilePage/ProfileInfo/ProfileEdit/ProfileEditBlock.tsx","Pages/ProfilePage/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/Pages/ProfilePage/NewPost/NewPosts.module.css?749f","webpack://samurai-way/./src/Components/Buttons/Button.module.css?12b3","Components/Buttons/Button.tsx","Pages/ProfilePage/NewPost/NewPost.tsx","webpack://samurai-way/./src/Pages/ProfilePage/Suggestions/Suggestions.module.css?e3bf","webpack://samurai-way/./src/Pages/ProfilePage/Suggestions/Suggestion/Suggestion.module.css?277d","Pages/ProfilePage/Suggestions/Suggestion/Suggestion.tsx","Pages/ProfilePage/Suggestions/Suggestions.tsx","Pages/ProfilePage/ProfilePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"appContent\":\"Profile_appContent__cASpU\"};","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__NZoeO\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__v5pJu\",\"Message\":\"Post_Message__GzI9-\",\"MessageAva\":\"Post_MessageAva__nK7PU\",\"MessageName\":\"Post_MessageName__90Yc4\",\"MessageDate\":\"Post_MessageDate__RvkZr\",\"MessageText\":\"Post_MessageText__SaPEr\",\"LikesCounter\":\"Post_LikesCounter__9YnPw\",\"LikesCount\":\"Post_LikesCount__6CNmm\",\"heart\":\"Post_heart__wWrCH\"};","import React, {useState} from 'react';\nimport style from \"./Post.module.css\"\n\ntype PostPropsType = {\n    message: string;\n    likes: number\n}\nconst Post = (props: PostPropsType) => {\n\n    const [likesCount,setLikesCount] = useState(props.likes)\n    const [canPressed, setCanPressed] = useState(true)\n    const onClickHandler = () => {\n        if(canPressed){\n            let likes = likesCount  + 1\n            setLikesCount(likes)\n            setCanPressed(false)\n        }\n    }\n\n    return (\n        <div className={style.item}>\n            <div className={style.Message}>\n                <div className={style.MessageAva}>\n                    <img src=\"https://www.meme-arsenal.com/memes/b877babd9c07f94b952c7f152c4e264e.jpg\" alt={\"ava\"}/>\n                </div>\n                <div className={style.MessageText}>\n                    <div className={style.MessageName}> Vlad Rudenko:</div>\n                    <div className={style.MessageDate}>\n                        06.09.2022\n                    </div>\n                </div>\n            </div>\n            <div className={style.MessageText}>\n                {props.message}\n            </div>\n            <div className={style.LikesCounter}>\n                <div className={style.heart} onClick={onClickHandler}></div>\n                <div className={style.LikesCount}>{likesCount}</div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport style from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\";\nimport {PostsDataType} from \"../../../Redux/Types\";\nimport {v1} from \"uuid\";\n\ntype MyPostsPropsType = {\n    PostsData: Array<PostsDataType>\n}\n\nconst MyPosts = (props: MyPostsPropsType) => {\n\n    const PostsElement = props.PostsData.map(dialog =>\n        <Post\n            key = {v1()}\n            message={dialog.message}\n            likes={dialog.likesCount}\n        />)\n\n    return (\n        <div className={style.postsBlock}>\n            My posts:\n            {PostsElement}\n            {PostsElement}\n            {PostsElement}\n        </div>\n    );\n};\n\nexport default MyPosts;","// extracted by mini-css-extract-plugin\nexport default {\"ProfileBlock\":\"ProfileInfo_ProfileBlock__V5Pe7\",\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__Ol+1y\",\"EditableStatus\":\"ProfileInfo_EditableStatus__Ip2cS\",\"MainName\":\"ProfileInfo_MainName__FPCE2\",\"Login\":\"ProfileInfo_Login__Do1xv\",\"ProfileStatus\":\"ProfileInfo_ProfileStatus__Vkmum\",\"ProfileDescription\":\"ProfileInfo_ProfileDescription__JPuNP\",\"descriptionItem\":\"ProfileInfo_descriptionItem__Owq0y\",\"EditButton\":\"ProfileInfo_EditButton__G5sud\"};","// extracted by mini-css-extract-plugin\nexport default {\"EditableSpan\":\"EditableStatus_EditableSpan__cLFhD\"};","import {Edit} from '@mui/icons-material';\nimport {ChangeEvent, useState} from 'react';\nimport style from './EditableStatus.module.css'\nimport {Box, Popover, TextField, Typography} from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\n\n\ntype EditableSpanType = {\n    Status: string;\n    callBack: (newStatus: string) => void;\n};\nexport const EditableStatus = (props: EditableSpanType) => {\n    const {Status, callBack} = props;\n    const [value, setValue] = useState(Status)\n    const [newValue, setNewValue] = useState(Status);\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewValue(e.currentTarget.value);\n    };\n    const changeValue = () => {\n        if (newValue !== value) {\n            setValue(newValue)\n            callBack(newValue);\n        }\n    };\n\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        changeValue();\n    };\n\n    const open = Boolean(anchorEl);\n\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n        <div className={style.EditableSpan}>\n            <Typography fontSize={\"20px\"} onDoubleClick={handleClick} ml={2}>\n                {value !== \"\" && value}\n            </Typography>\n            {value !== \"\" && <Edit\n                aria-describedby={id}\n                sx={{ml: 1}}\n                fontSize={'small'}\n                onClick={handleClick}\n            />}\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <Box sx={{p: 2}}>\n                    <Typography>Type your new status.</Typography>\n                    <Box display={\"flex\"} alignItems={'center'}>\n                        <TextField\n                            hiddenLabel\n                            id=\"filled-hidden-label-small\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            value={newValue}\n                            onChange={onChangeHandler}\n                        />\n                        <AddIcon onClick={handleClose}/>\n                    </Box>\n                </Box>\n            </Popover>\n        </div>\n    )\n};","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {useAppSelector} from \"../../../Redux/ReduxState\";\nimport {changeUserStatusTC} from \"../../../Redux/Reducers/profilePageReducer\";\nimport {EditableStatus} from \"../../../Components/EditableStatus/EditableStatus\";\nimport style from './ProfileInfo.module.css'\n\nconst ProfileStatus = () => {\n    const status = useAppSelector(state => state.ProfilePage.status)\n\n    const dispatch = useDispatch()\n\n    const changeStatus = (newStatus: string) => {\n        dispatch(changeUserStatusTC(newStatus))\n    }\n\n    return (\n        <div className={style.EditableStatus}>\n            <EditableStatus Status={String(status)} callBack={changeStatus}/>\n        </div>\n    );\n};\n\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"AvatarBlock\":\"Avatar_AvatarBlock__549jZ\",\"Avatar\":\"Avatar_Avatar__unzQv\",\"ChangeAvatarSuggestion\":\"Avatar_ChangeAvatarSuggestion__kNkbN\",\"avatarZone\":\"Avatar_avatarZone__G2x41\"};","import { ChangeEvent, FC, ReactElement } from 'react';\n\ninterface UploadFileWrapperProps {\n    children: ReactElement;\n    callback: (file: File) => void;\n}\n\nexport const UploadFileWrapper: FC<UploadFileWrapperProps> = ({ children, callback }) => {\n    const uploadHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length) {\n            const file = e.target.files[0];\n\n            if (file.size < 4000000) {\n                callback(file);\n            } else {\n                console.error('Error: ', 'Файл слишком большого размера');\n            }\n        }\n    };\n\n    return (\n        <label>\n            <input type=\"file\" onChange={uploadHandler} style={{ display: 'none' }} accept={'.jpg, .jpeg, .png'}/>\n            {/* important!!! children should be with component type \"span\"*/}\n            {children}\n        </label>\n    );\n};","import React, {memo, useEffect, useState} from 'react';\nimport style from \"./Avatar.module.css\";\nimport {UploadFileWrapper} from \"../../../../Components/UploadFileWrapper/UploadFileWrapper\";\nimport {useDispatch} from \"react-redux\";\nimport {changeUserAvatarTC} from \"../../../../Redux/Reducers/profilePageReducer\";\nimport {useInView} from \"react-intersection-observer\";\nimport {setAvatarVisibleAC} from \"../../../../Redux/Reducers/appReducer\";\n\ntype AvatarPropsType = {\n    profilePhoto: string\n}\nconst Avatar = memo(({profilePhoto}: AvatarPropsType) => {\n    const [isHover, setIsHover] = useState(false)\n    const [renderCount, setRenderCount] = useState(0)\n    const [ref, inView] = useInView({\n        threshold: 0.01\n    })\n\n    const dispatch = useDispatch()\n\n    const avatarSuggestionHandle = () => {\n        setIsHover(!isHover)\n    }\n    const changeAvatarHandle = (file: File) => {\n        dispatch(changeUserAvatarTC(file))\n    }\n\n    useEffect(() => {\n        const newRenderCount = renderCount + 1\n        setRenderCount(newRenderCount)\n        if (renderCount > 1) {\n            dispatch(setAvatarVisibleAC(inView))\n        }\n    }, [inView])\n\n    return (\n        <div className={isHover ? style.ChangeAvatarSuggestion : style.AvatarBlock} ref={ref}>\n            <UploadFileWrapper callback={changeAvatarHandle}>\n                {!profilePhoto ?\n                    <div className={style.avatarZone}>\n                        <span>\n                            Your avatar should be here\n                        </span>\n                        <span>\n                             click here to upload photo\n                        </span>\n                    </div> :\n                    <img\n\n                        className={style.Avatar}\n                        src={profilePhoto}\n                        alt={\"avatar\"} onMouseEnter={avatarSuggestionHandle} onMouseLeave={avatarSuggestionHandle}/>\n                }\n            </UploadFileWrapper>\n        </div>\n    );\n});\n\nexport default Avatar;","// extracted by mini-css-extract-plugin\nexport default {\"editBlock\":\"ProfileEditBlock_editBlock__Qm-pl\",\"inputBlock\":\"ProfileEditBlock_inputBlock__t4s6g\",\"Input\":\"ProfileEditBlock_Input__rH5Bc\",\"checkBoxInputBlock\":\"ProfileEditBlock_checkBoxInputBlock__wodWc\",\"checkBoxInput\":\"ProfileEditBlock_checkBoxInput__sVyKE\",\"buttonBlock\":\"ProfileEditBlock_buttonBlock__os5yv\",\"saveButton\":\"ProfileEditBlock_saveButton__n2iPD\",\"cancelButton\":\"ProfileEditBlock_cancelButton__ttj1W\",\"error\":\"ProfileEditBlock_error__73qaC\"};","import React, {Dispatch, SetStateAction, useState} from 'react';\nimport style from './ProfileEditBlock.module.css'\nimport {useAppSelector} from \"../../../../Redux/ReduxState\";\nimport {SubmitHandler, useForm} from \"react-hook-form\";\nimport {useDispatch} from \"react-redux\";\nimport {changeUserProfileDataTC} from \"../../../../Redux/Reducers/profilePageReducer\";\n\ntype ProfileEditBlockPropsType = {\n    setProfileEditable: Dispatch<SetStateAction<boolean>>\n}\n\nexport interface editProfileDatatype {\n    Name: string,\n    Status: string,\n    AboutMe: string,\n    LookingForAJob: boolean,\n    LookingForAJobDescription: string,\n}\n\nconst ProfileEditBlock = ({setProfileEditable}: ProfileEditBlockPropsType) => {\n    const {\n        fullName,\n        aboutMe,\n        lookingForAJobDescription,\n        lookingForAJob,\n        userId\n    } = useAppSelector(state => state.ProfilePage.userProfile)\n    const [error, setError] = useState(false)\n    const status = useAppSelector(state => state.ProfilePage.status)\n    const id = Number(userId)\n    const dispatch = useDispatch()\n\n    const {\n        register,\n        handleSubmit,\n    } = useForm<editProfileDatatype>({\n        defaultValues: {\n            Name: fullName,\n            Status: status,\n            AboutMe: aboutMe,\n            LookingForAJob: lookingForAJob,\n            LookingForAJobDescription: lookingForAJobDescription\n        },\n    });\n\n    const onSubmit: SubmitHandler<editProfileDatatype> = (\n        {\n            Name,\n            Status,\n            AboutMe,\n            LookingForAJob,\n            LookingForAJobDescription\n        }: editProfileDatatype\n    ) => {\n        if (Status === null || Status === \"\" || AboutMe === null || AboutMe === \"\"\n            || LookingForAJobDescription === null || LookingForAJobDescription === \"\") {\n            setError(true)\n        } else {\n            setError(false)\n            dispatch(changeUserProfileDataTC({\n                    Name,\n                    Status,\n                    AboutMe,\n                    LookingForAJob,\n                    LookingForAJobDescription,\n                    userId: id\n                })\n            )\n            closeHandle()\n        }\n    }\n\n    const closeHandle = () => {\n        setProfileEditable(false)\n    }\n\n    return (\n        <div className={style.editBlock}>\n            <div className={style.inputBlock}>\n                Name\n                <input {...register('Name')} className={style.Input}\n                       defaultValue={fullName}/>\n            </div>\n            <div className={style.inputBlock}>\n                Status\n                <input {...register('Status')} className={style.Input} defaultValue={status}/>\n            </div>\n            <div className={style.inputBlock}>\n                About me\n                <input {...register('AboutMe')} className={style.Input} defaultValue={aboutMe}/>\n            </div>\n            <div className={style.checkBoxInputBlock}>\n                <input {...register('LookingForAJob')} type={'checkbox'}\n                       defaultChecked={lookingForAJob}\n                       className={style.checkBoxInput}/>\n                Looking for a job\n            </div>\n            <div className={style.inputBlock}>\n                Skills description\n                <input {...register('LookingForAJobDescription')} className={style.Input}\n                       defaultValue={lookingForAJobDescription}/>\n            </div>\n            {error &&\n                <div className={style.error}> Заполните все поля! </div>\n            }\n            <div className={style.buttonBlock}>\n                <button className={style.saveButton} onClick={handleSubmit(onSubmit)}>Save</button>\n                <button className={style.cancelButton} onClick={closeHandle}>Cancel</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileEditBlock;","import React, {useState} from 'react';\nimport style from \"./ProfileInfo.module.css\"\nimport {useAppSelector} from \"../../../Redux/ReduxState\";\nimport {profileInfoResponseType} from \"../../../Api/users-api\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport Avatar from \"./Avatar/Avatar\";\nimport ProfileEditBlock from \"./ProfileEdit/ProfileEditBlock\";\n\nconst ProfileInfo = () => {\n    const {\n        fullName,\n        aboutMe,\n        lookingForAJob,\n        photos,\n        lookingForAJobDescription\n    } = useAppSelector<profileInfoResponseType>(state => state.ProfilePage.userProfile)\n\n    const status = useAppSelector(state => state.ProfilePage.status)\n    const login = useAppSelector(state => state.auth.login)\n\n    const [profileEditable, setProfileEditable] = useState(false)\n\n    const changeProfileInfoHandle = () => {\n        setProfileEditable(!profileEditable)\n    }\n\n    return (\n        <div className={style.ProfileBlock}>\n            <Avatar profilePhoto={photos.large}/>\n            {profileEditable ?\n                <ProfileEditBlock setProfileEditable={setProfileEditable}/> :\n                <>\n                    <div className={style.DescriptionBlock}>\n                        <div className={style.MainName}>\n                            {fullName}\n                        </div>\n                        <div className={style.Login}>\n                            {login !== fullName && login}\n                        </div>\n                        {status &&\n                            <div className={style.ProfileStatus}>\n                                <ProfileStatus/>\n                            </div>\n                        }\n                        {/*вынести в отдельный файл*/}\n                        <div className={style.ProfileDescription}>\n                            <div className={style.descriptionItem}>\n                                About me:\n                                {aboutMe && \" \" + aboutMe}\n                            </div>\n                            <div className={style.descriptionItem}>\n                                Looking for a job:\n                                {lookingForAJob && lookingForAJob ? \" yes\" :\" no\"}\n                            </div>\n                            <div className={style.descriptionItem}>\n                                My skills:\n                                {lookingForAJobDescription && \" \" + lookingForAJobDescription}\n                            </div>\n                        </div>\n                    </div>\n                    <button className={style.EditButton} onClick={changeProfileInfoHandle}> Edit Profile</button>\n                </>\n            }\n        </div>\n    );\n};\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"NewPost\":\"NewPosts_NewPost__BlmhY\",\"Input\":\"NewPosts_Input__OAIVg\"};","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__3eX+-\"};","import React from 'react';\nimport style from \"./Button.module.css\"\n\ntype ButtonPropsType = {\n    buttonName:string\n    buttonFunction: () => void\n}\n\nconst Button = (props:ButtonPropsType) => {\n    return (\n        <button onClick={props.buttonFunction} className={style.Button}>{props.buttonName}</button>\n    );\n};\n\nexport default Button;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport style from \"./NewPosts.module.css\"\nimport Button from \"../../../Components/Buttons/Button\";\n\ntype NewPostPropsType = {\n    addPost: (postData: string) => void\n}\n\nconst NewPost = (props:NewPostPropsType) => {\n    const [postData,setPostData] = useState(\"\")\n\n    const onClickAddPost = () => {\n        postData.trim() !== \"\" && props.addPost(postData)\n        setPostData(\"\")\n    }\n    const onKeyDownAddPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        e.key === \"Enter\" && onClickAddPost()\n    }\n\n    const onChangeSetPost = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        setPostData(e.currentTarget.value)\n    }\n\n    return (\n        <div className={style.NewPost}>\n            <div>\n                <textarea placeholder={\"Whats new?\"} onChange={onChangeSetPost} onKeyPress={onKeyDownAddPost} value={postData} className={style.Input}/>\n            </div>\n            <div>\n                <Button buttonFunction={() => onClickAddPost()} buttonName={\"Post\"} />\n            </div>\n        </div>\n    );\n};\n\nexport default NewPost;","// extracted by mini-css-extract-plugin\nexport default {\"SuggestionsBlock\":\"Suggestions_SuggestionsBlock__UYlOe\",\"title\":\"Suggestions_title__BDY3e\",\"container\":\"Suggestions_container__amHmV\"};","// extracted by mini-css-extract-plugin\nexport default {\"Suggestion\":\"Suggestion_Suggestion__k6Boh\",\"title\":\"Suggestion_title__qXF7-\",\"description\":\"Suggestion_description__T92tv\"};","import React from 'react';\nimport style from './Suggestion.module.css'\n\ntype SuggestionPropsType = {\n    title: string,\n    description: string\n}\nconst Suggestion = ({title, description}: SuggestionPropsType) => {\n    return (\n        <div className={style.Suggestion}>\n            <div className={style.title}> {title} </div>\n            <div className={style.description}> {description} </div>\n        </div>\n    );\n};\n\nexport default Suggestion;","import React from 'react';\nimport style from './Suggestions.module.css'\nimport Suggestion from \"./Suggestion/Suggestion\";\nimport {useAppSelector} from \"../../../Redux/ReduxState\";\n\nconst Suggestions = () => {\n    const smallAvatar = useAppSelector(state => state.ProfilePage.userProfile.photos.small)\n    const largeAvatar = useAppSelector(state => state.ProfilePage.userProfile.photos.large)\n    const status = useAppSelector(state => state.ProfilePage.status)\n\n    return <>\n        {((!smallAvatar && !largeAvatar) || !status) &&\n            <div className={style.SuggestionsBlock}>\n                <div className={style.title}>\n                    Suggestions:\n                </div>\n                <div className={style.container}>\n                    {(!smallAvatar && !largeAvatar) &&\n                        <Suggestion title={\"Установите фото профиля\"}\n                                    description={\"Так будет проще друзьям найти вас\"}/>}\n                    {!status &&\n                        <Suggestion title={\"Добавить статус\"} description={\"Так вы можете рассказать всем о себе\"}/>}\n                </div>\n            </div>}\n    </>\n};\n\nexport default Suggestions;","import React, {useEffect} from 'react';\nimport style from \"./Profile.module.css\";\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport NewPost from \"./NewPost/NewPost\";\nimport {PostsDataType} from \"../../Redux/Types\";\nimport {addPostsAC, setAuthorizedUserProfileTC} from \"../../Redux/Reducers/profilePageReducer\";\nimport {useDispatch} from \"react-redux\";\nimport {useAppSelector} from \"../../Redux/ReduxState\";\nimport PreLoader from \"../../Components/PreLoader/PreLoader\";\nimport Suggestions from \"./Suggestions/Suggestions\";\n\n\nconst ProfilePage = () => {\n    const posts = useAppSelector<Array<PostsDataType>>(state => state.ProfilePage.PostsData)\n    const isLoading = useAppSelector(state => state.app.isLoading)\n    const userId = useAppSelector(state => state.auth.authorizedUserId)\n    const fullName = useAppSelector(state => state.ProfilePage.userProfile.fullName)\n    const dispatch = useDispatch()\n    const addPost = (post: string) => {\n        dispatch(addPostsAC(post))\n    }\n\n    useEffect(() => {\n        if(!fullName){\n            dispatch(setAuthorizedUserProfileTC(Number(userId)))\n        }\n    }, [])\n\n    return (\n        <div>\n            {isLoading ? <PreLoader/> :\n                <div className={style.appContent}>\n                    <ProfileInfo/>\n                    <div>\n                        <Suggestions/>\n                        <NewPost addPost={addPost}/>\n                        <MyPosts PostsData={posts}/>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ProfilePage;"],"names":["props","useState","likes","likesCount","setLikesCount","canPressed","setCanPressed","className","style","src","alt","message","onClick","PostsElement","PostsData","map","dialog","v1","EditableStatus","Status","callBack","value","setValue","newValue","setNewValue","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","Typography","fontSize","onDoubleClick","ml","Edit","sx","Popover","onClose","anchorOrigin","vertical","horizontal","Box","p","display","alignItems","TextField","hiddenLabel","variant","size","onChange","e","Add","status","useAppSelector","state","ProfilePage","dispatch","useDispatch","String","newStatus","changeUserStatusTC","UploadFileWrapper","children","callback","type","target","files","length","file","console","error","accept","memo","profilePhoto","isHover","setIsHover","renderCount","setRenderCount","useInView","threshold","ref","inView","avatarSuggestionHandle","useEffect","setAvatarVisibleAC","changeUserAvatarTC","onMouseEnter","onMouseLeave","setProfileEditable","userProfile","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","userId","setError","Number","useForm","defaultValues","Name","AboutMe","LookingForAJob","LookingForAJobDescription","register","handleSubmit","closeHandle","defaultValue","defaultChecked","changeUserProfileDataTC","photos","login","auth","profileEditable","large","buttonFunction","buttonName","postData","setPostData","onClickAddPost","trim","addPost","placeholder","onKeyPress","key","title","description","smallAvatar","small","largeAvatar","posts","isLoading","app","authorizedUserId","setAuthorizedUserProfileTC","PreLoader","post","addPostsAC"],"sourceRoot":""}